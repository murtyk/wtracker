<script type="text/javascript">
  var name_locations;
  var companies_count;
  var google_places_count = 0;

  function sort_if_complete()
  {
    console.log("google_places_count = " + google_places_count)
    if (companies_count == google_places_count)
    {
      $('.bar').width("98%");
      console.log('calling sort and filter');
      location.href = "/job_searches/sort_and_filter/?id=<%=@job_search.id%>&in_state=1";
    }
  }

  function status_update()
  {
    google_places_count += 1;
    percent_complete = (95 * google_places_count) / companies_count;
    $('.bar').width(percent_complete + '%');
    sort_if_complete();
  }

  function get_all_google_companies(){

    $("#modal_title").html('Fetching information on Companies.');
    $('.bar').width('0%');
    console.log("in get-all-google-places click");

    var delay = 400;
    $.get("/job_searches/google_places_cache_check_and_start", {job_search_id: <%= @job_search.id %>}, function(data) {
      if (data){
        delay = 20;
      }
    });

    var processes_count = <%= ENV['PROCESSES_COUNT'] ? ENV['PROCESSES_COUNT'].to_i : 3 %>;
    var concurrent_places_searches = 3;
    if (processes_count > 3)
    {
      concurrent_places_searches = processes_count - 1;
    }
    // big assumption: server engine processes requests in fifo and the cache check returns in less than 400ms, so we don't need any wait mechanism. we need to analyze this for multi-processor
    // var $bar = $('.bar');

    $("#pleaseWaitDialog").modal();

    interval = setInterval(function(){
      count = 1
      console.log("delay = ", delay);
      while (count <= concurrent_places_searches && name_locations.length > 0)
      {
        name_location = name_locations.splice(0, 1)[0];
        $.get("/employers/get_google_company", { name_location: name_location }, function(data) {
        })
        .always(function(){
          status_update();
        });
        count += 1;
      }
      if (name_locations.length === 0) {
       clearInterval(interval);
      }
    }, delay);

  };
</script>
